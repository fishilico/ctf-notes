#!/usr/bin/env python3
"""Analyze the bonus level given after the challenge was finished"""
import writeup


# Program from https://www.synacktiv.com/posts/challenges/2019-summer-challenge-writeup.html
BONUS_LEVEL_BIN = """
010001000100010001000100010001000100010001000100010001000100000001010000
000001011111001011110110101001010000000001011111001011110110101001010000
000001011111001011110110101001010000000001011111001011110110101001011111
111000100101011111111100000010111111111100010010101111111111100000010100
000000010111110010111101101010000001011110000101010111111111111111111111
110111101111111111111111111110111011010000001011111000010101011111111111
111111111101111101111011101101101101011010010111111110111111010010111111
110111111001111110100101111111101111110010111111111111011111111100111111
111100101111111111110111100111111001011111111111101111010000001010111111
011100101010111111111101111101110110101000010111111111111001111111111101
011111111111100100011010000100000101100000010110000001011000000101000000
000101110111101110000001011101111111100000010111011111111000000101110111
111110000010011111111101000000101110000001011101111111100000010111011111
111000001000001000000101110000001011101111110000010000010000010011010000
101011111110011111000000000010111011110111001010111111111001011000001100
000100000000101110000010111000001010010100011010000000010110000001010101
010001101000010000000101100000000101010111111111111111111110111110110000
011001010101111111111111111111111011111011001011111110111110111001011111
110111110100000100110101101111000001001010111111011111001010100011010000
100000001011000000001010101111111111111111111111011111011001010100000000
000101011101111101111011100101111111011111011101101000000101011101111101
111001011111111101111111011100000010101110000010111100000100110101101111
010010111111111110010100011010000100000101100000000111111111111111111111
000000101011111111011111011001010111111110111011010000010011010110111111
111110000010000101111100000000001010111111011110010111101101010000011001
000110100001000000000101110000001011110000001010000000001011101111011100
101111111101111011001010111111111011111110111010000010000010011010010110
010001101000000001011100000000001011101111001010111111110111111101110111
110100000100100011010000000000101100000010111111011001010101111111011111
101111101111010110010001101000000001011000000000010111001111111011110010
101111111101111111011111101110000010010001101000000101100000011111111110
010111110111101000001000000101000000000101111100101111011010100101111101
101001011111010110000111100111101000000000010101011110000000010101111000
000110011101111000110001011110001101100110011001100000100000000111001011
11011010
""".replace('\n', '')

BONUS_LEVEL_TREE = writeup.str_to_tree(BONUS_LEVEL_BIN)
BONUS_LEVEL_LAMBDA = writeup.build_lambda_expr(BONUS_LEVEL_TREE)

if __name__ == '__main__':
    BONUS_LEVEL_GLOBVARS = writeup.ExprGlobalVariables(BONUS_LEVEL_LAMBDA)

    # Simplify the variables using known patterns
    for var_idx, var_expr in enumerate(BONUS_LEVEL_GLOBVARS.global_variables):
        simplified_expr = writeup.simplify_lambda(var_expr)
        print(f"* BonusGlobvar_{var_idx} is {simplified_expr}")
        if isinstance(simplified_expr, writeup.ConstantFunction):
            # Let's replace the expression in the context
            BONUS_LEVEL_GLOBVARS.global_varsyms[var_idx].name = simplified_expr.name

    print("")
    print("------------------------------------------------------------")
    print("")
    print(f"Main is {BONUS_LEVEL_GLOBVARS.main}")
    simplified_expr = writeup.simplify_lambda(BONUS_LEVEL_GLOBVARS.main)
    print("")
    print(f"Simplified main is:")
    writeup.pretty_print(simplified_expr)
