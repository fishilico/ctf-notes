Fichier ZIP

00000000: 0000 0000 0000 0000 0000 0000 0000 0000  ................
*
00000530: 0000 0000 0000 0000 0030 8202 5d02 0100  .........0..]...
00000540: 0281 8100 c18a 6587 d05c 9d13 e1f9 df29  ......e..\.....)
00000550: cea9 7ddc e109 50ad 2fff c898 9462 453e  ..}...P./....bE>
00000560: e056 f666 9350 fe9c 8cee e132 e19a d906  .V.f.P.....2....
00000570: 6145 b191 3403 c2c6 6d53 800e 57fe 8780  aE..4...mS..W...
00000580: e63d e9f4 2365 9918 83c8 7629 a458 161e  .=..#e....v).X..
00000590: a5b9 ce19 f2a2 6387 4f58 b006 7619 d4b5  ......c.OX..v...
000005a0: 7725 d0d8 e694 7691 86d2 e2eb c2aa 8306  w%....v.........
000005b0: 0af8 2ff6 1701 1d33 0c34 76c0 72c9 3adb  ../....3.4v.r.:.
000005c0: 4426 a987 0203 0100 0100 0000 0000 0000  D&..............
000005d0: 0000 0000 0000 0000 0000 0000 0000 0000  ................

    => dd if=mempage.bin bs=1 skip=1337 count=144 of=pubkey.der
        => part of key, with some data remaning
*
00000640: 0000 0000 0000 0000 0000 0000 0241 00c6  .............A..
00000650: a11d 0000 0000 0000 0000 0000 0000 0000  ................
00000660: 0000 0000 0000 0000 0000 0000 0000 0000  ................

    => DER offset 0x64c-1337 = 0x113 = 275 : first prime (p)
        02: INTEGER
        41: size = 65
        00 c6 : start....
*
00000750: 0000 0000 0000 0000 0240 37e3 5b36 abe4  .........@7.[6..
00000760: 935a ef71 bebc bc1e b956 dbbd d4fc 2214  .Z.q.....V....".
00000770: bb2e 09a8 bc45 ad3c cd56 5a19 2bf0 4e4c  .....E.<.VZ.+.NL
00000780: 276d 5d41 7443 a2e8 1aea ccfa fd20 c356  'm]AtC....... .V
00000790: 347c 7290 1ad5 497d e83b 0000 0000 0000  4|r...I}.;......
000007a0: 0000 0000 0000 0000 0000 0000 0000 0000  ................

    => dd if=mempage.bin bs=1 skip=$((0x758)) count=$((0x42)) of=bytes_at_758
*
00000ac0: 0000 0000 0000 504b 0304 0a00 0000 0000  ......PK........
00000ad0: e54e 7950 b2e7 1c52 8000 0000 8000 0000  .NyP...R........
00000ae0: 0c00 1c00 666c 6167 2e74 7874 2e65 6e63  ....flag.txt.enc
00000af0: 5554 0900 036d 1c7b 5e91 1c7b 5e75 780b  UT...m.{^..{^ux.
00000b00: 0001 04f5 0100 0004 1400 0000 1ac3 c660  ...............`
00000b10: ffb5 840c e408 95cd 740a a25a 807b 822d  ........t..Z.{.-
00000b20: 6c02 0212 5fc2 1863 efaf 9285 4b81 652d  l..._..c....K.e-
00000b30: 1553 d669 9391 2a1d 395d 86d0 139c 5b4a  .S.i..*.9]....[J
00000b40: 139c 7358 0bd8 4f18 b70e 85b2 a378 d239  ..sX..O......x.9
00000b50: 5ffe e9e5 188e 7347 ac9e a67d 1d30 f578  _.....sG...}.0.x
00000b60: 6240 39c7 f131 93ea 68d7 bf4f e599 d212  b@9..1..h..O....
00000b70: 96e0 d74d b4ef 3e36 7b08 043a 9306 f53b  ...M..>6{..:...;
00000b80: 52a8 3bb3 7c4f 05cd dd03 eac3 504b 0102  R.;.|O......PK..
00000b90: 1e03 0a00 0000 0000 e54e 7950 b2e7 1c52  .........NyP...R
00000ba0: 8000 0000 8000 0000 0c00 1800 0000 0000  ................
00000bb0: 0000 0000 a481 0000 0000 666c 6167 2e74  ..........flag.t
00000bc0: 7874 2e65 6e63 5554 0500 036d 1c7b 5e75  xt.encUT...m.{^u
00000bd0: 780b 0001 04f5 0100 0004 1400 0000 504b  x.............PK
00000be0: 0506 0000 0000 0100 0100 5200 0000 c600  ..........R.....
00000bf0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
*
00000ff0: 0000 0000 0000 0000 0000 0000 0000 0000  ................


1337          0x539           Private key in DER format (PKCS header length: 4, sequence length: 605
2758          0xAC6           Zip archive data, at least v1.0 to extract, compressed size: 128, uncompressed size: 128, name: flag.txt.enc
3038          0xBDE           End of Zip archive, footer length: 22

flag.txt.enc:
    00000000: 1ac3 c660 ffb5 840c e408 95cd 740a a25a  ...`........t..Z
    00000010: 807b 822d 6c02 0212 5fc2 1863 efaf 9285  .{.-l..._..c....
    00000020: 4b81 652d 1553 d669 9391 2a1d 395d 86d0  K.e-.S.i..*.9]..
    00000030: 139c 5b4a 139c 7358 0bd8 4f18 b70e 85b2  ..[J..sX..O.....
    00000040: a378 d239 5ffe e9e5 188e 7347 ac9e a67d  .x.9_.....sG...}
    00000050: 1d30 f578 6240 39c7 f131 93ea 68d7 bf4f  .0.xb@9..1..h..O
    00000060: e599 d212 96e0 d74d b4ef 3e36 7b08 043a  .......M..>6{..:
    00000070: 9306 f53b 52a8 3bb3 7c4f 05cd dd03 eac3  ...;R.;.|O......

DER key:
    0:d=0  hl=4 l= 605 cons: SEQUENCE          
    4:d=1  hl=2 l=   1 prim:  INTEGER           :00
    7:d=1  hl=3 l= 129 prim:  INTEGER           :C18A6587D05C9D13E1F9DF29CEA97DDCE10950AD2FFFC8989462453EE056F6669350FE9C8CEEE132...
  139:d=1  hl=2 l=   3 prim:  INTEGER           :010001
  ....
  until offset (1337+4+605) = 0x79a
    => on a la fin de la clé privée, en bytes_at_758
        => "0240" : 64-bytes int

    " l= 129" => RSA 1024

Test PyCrypto:
    542:d=1  hl=2 l=  64 prim:  INTEGER           :14198274F78ACDA0EEF63BD7FA18903807A7188A78E816132B93258D523B36058E84BE9689B9AD33B272CF7D31484497C9617ABA38F99551D618EC1C571D174E

Donc on a "coefficient:"
    u=1/p mod q = (p^(q-2)) mod q


(n*u) mod q = 0


With LLL (solve.sage):

    p = 0xf97102fc2994b1828f22bcb21cc1e211097843ed8ee321966c18d7a432f2e5f975d838c1a64295d39f3b94385f6c21ff61aafdc74c1e9f74cdd580e4813d4269
    q = 0xc6a11dea19a249228f50bef32ae550147fb4304706c5f0474e7d22da60e3bdccce37112ae468bb8861b819993dbdbd35882115718f8deb63b988518d8e682e6f
    n = p * q
    e = 0x10001
    import gmpy2
    d = int(gmpy2.invert(e, (p-1)*(q-1)))
    flag_enc = int.from_bytes(open('flag.txt.enc', 'rb').read(), 'big')
    flag_dec = pow(flag_enc, d, n)
    flag_dec.to_bytes(128, 'big')

    00000000: 0002 ac85 630a b44d e976 2f1e 0ccf be82  ....c..M.v/.....
    00000010: f456 610b d2ad e520 52bc 7b16 54ef 9b60  .Va.... R.{.T..`
    00000020: 102a bfeb 4aba fc6e 1a45 631a bf4c 7741  .*..J..n.Ec..LwA
    00000030: ec86 95b1 7968 86f8 0046 4353 437b 3432  ....yh...FCSC{42
    00000040: 6531 6164 6266 3266 3631 3666 3465 3365  e1adbf2f616f4e3e
    00000050: 6238 3531 3363 3161 3861 3032 3534 6336  b8513c1a8a0254c6
    00000060: 6265 3036 3731 3931 6539 3864 3862 3061  be067191e98d8b0a
    00000070: 3864 3138 6566 6234 3633 3035 6438 7d0a  8d18efb46305d8}.
